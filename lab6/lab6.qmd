---
title: "Lab 6: functions"
author: "Elsa Chen (A16632961)"
format: pdf
toc: TRUE
---

All functions in R have:

-   a name
-   input arguments
-   the body (what to do to the arguments)

name \<- function(arg1, arg2, etc.){ what to do(arg1, arg2) }

## writing a simple function

a function to add numbers named `add()`

```{r}
# what we want `add()` to do
x <- 10
y <- 10
x + y
```

```{r}
add <- function(x){
  y <- 10
  x + y
} # this function will take a value x and add 10 to it
```

remember to run the code before using the function

```{r}
add(1)
```

now to make the function more flexible

```{r}
add <- function(x, y){
  x + y
}
```

```{r}
add(1, 10)
```

but now we need to input two numbers for the function to work. To change this we can add a default to one of the arguments

```{r}
add <- function(x, y = 1){
  x + y
}
```

```{r}
add(5)
```

## for the lab worksheet

### write a function grade() to determine an overall grade from a vector of student homework

assignment scores dropping the lowest single score. If a student misses a homework (i.e. has an NA value) this can be used as a score to be potentially dropped.

```{r}
# Example input vectors to start with
student1 <- c(100, 100, 100, 100, 100, 100, 100, 90)
student2 <- c(100, NA, 90, 90, 90, 90, 97, 80)
student3 <- c(90, NA, NA, NA, NA, NA, NA, NA)
```

```{r}
# what we want the `grade()` function to do
which.min(student2) # get the lowest number
student1[-which.min(student2)]# remove the lowest number
mean(student1) # average the values but doesn't work with NA values
mean(student2, na.rm = TRUE) # now can remove all NAs
student3[is.na(student3)] <- 0 # this can replace all NAs with 0
```

```{r}
grade <- function(x){
  x[is.na(x)] <- 0 # replace NAs with 0
  mean(x[-which.min(x)]) # drops lower score and find mean
} 
```

```{r}
grade(student1)
grade(student2)
grade(student3)
```

yay it works!

### use the function on the gradebook

```{r}
url <- "https://tinyurl.com/gradeinput"
gradebook <- read.csv(url, row.names = 1)
View(gradebook)
```

```{r}
grades <- apply(gradebook, 1, grade)
```

> who is the top scoring student?

```{r}
which.max(grades)
max(grades)
```

> which homework was toughest on students?

```{r}
which.min(colMeans(gradebook, na.rm = TRUE))
min(colMeans(gradebook, na.rm = TRUE))
```

> which homework was most predictive of overall score?

```{r}
gradebook2 <- gradebook
gradebook2[is.na(gradebook2)] <- 0
```

```{r}
which.max(apply(gradebook2, 2, cor, y = grades))
```

